<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.org.moying.infrastructure.dao.IOrderDao">

    <resultMap id="dataMap" type="cn.org.moying.infrastructure.dao.po.PayOrder">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="order_id" property="orderId"/>
        <result column="order_time" property="orderTime"/>
        <result column="total_amount" property="totalAmount"/>
        <result column="status" property="status"/>
        <result column="pay_url" property="payUrl"/>
        <result column="pay_time" property="payTime"/>
        <result column="market_type" property="marketType"/>
        <result column="market_deduction_amount" property="marketDeductionAmount"/>
        <result column="pay_amount" property="payAmount"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <insert id="insert" parameterType="cn.org.moying.infrastructure.dao.po.PayOrder">
        insert into pay_order(user_id, product_id, product_name, order_id, order_time,
                              total_amount,market_type,market_deduction_amount,pay_amount, status, create_time, update_time)
        values(#{userId}, #{productId}, #{productName}, #{orderId}, #{orderTime},
               #{totalAmount}, #{marketType}, #{marketDeductionAmount}, #{payAmount}  ,#{status}, now(), now())
    </insert>
    <update id="updateOrderPayInfo" parameterType="cn.org.moying.infrastructure.dao.po.PayOrder">
        update pay_order set pay_url = #{payUrl}, status = #{status},
                             market_type = #{marketType}, market_deduction_amount = #{marketDeductionAmount},
                             pay_amount = #{payAmount},
                             update_time = now()
        where order_id = #{orderId}
    </update>

    <select id="queryUnPayOrder" parameterType="cn.org.moying.infrastructure.dao.po.PayOrder" resultMap="dataMap">
        select product_id, product_name, order_id, order_time, total_amount, status, pay_url,
               market_type,market_deduction_amount,pay_amount
        from pay_order
        where user_id = #{userId} and product_id = #{productId}
        order by id desc
        limit 1
    </select>

    <update id="changeOrderPaySuccess" parameterType="cn.org.moying.infrastructure.dao.po.PayOrder">
        update pay_order set status = #{status}, pay_time = now(), update_time = now()
        where order_id = #{orderId}
    </update>

    <update id="changeOrderClose" parameterType="java.lang.String">
        update pay_order set status = 'CLOSE', pay_time = now(), update_time = now()
        where order_id = #{orderId}
    </update>
    <update id="changeorderMarketSettlement">

    </update>
    <update id="changeOrderMarketSettlement">
        update pay_order set status = 'MARKET', update_time = now()
        where order_id in
        <foreach item="orderId" collection="outTradeNoList" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </update>


    <select id="queryTimeoutCloseOrderList" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT order_id as orderId FROM pay_order
        WHERE status = 'PAY_WAIT' AND NOW() >= order_time + INTERVAL 30 MINUTE
        ORDER BY id ASC
        LIMIT 50
    </select>

    <select id="queryNoPayNotifyOrder" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT order_id as orderId FROM pay_order
        WHERE status = 'PAY_WAIT' AND NOW() >= order_time + INTERVAL 1 MINUTE
        ORDER BY id ASC
        LIMIT 10
    </select>
    <select id="queryOrderByOrderId" parameterType="java.lang.String" resultMap="dataMap">
        select user_id, product_id, product_name, order_id, order_time, total_amount, status, pay_url, market_type, market_deduction_amount, pay_amount
        from pay_order
        where order_id = #{orderId}
    </select>

    <update id="changeOrderDealDone">
        update pay_order set status = 'DEAL_DONE', update_time = now()
        where order_id = #{orderId}
    </update>

</mapper>
